'SELECT j.id, summoner_name, j.PlayerRankScore from qustoms.summoner t'+
'INNER JOIN('+
'SELECT id, SUM(Score) PlayerRankScore'+
'FROM'+
'('+
'################################ KDA Score ################################'+
'SELECT ((total_kills+total_assists)/total_deaths)/MaxKDA * 10 as Score, id from qustoms.summoner d'+
'INNER JOIN ('+
'SELECT MAX(KDA) as MaxKDA, MaxTotalGames as MaxTotalGames from qustoms.summoner'+
'INNER JOIN('+
'SELECT (total_kills+total_assists)/total_deaths as KDA, MaxTotalGames as MaxTotalGames from qustoms.summoner'+
'INNER JOIN('+
'SELECT MAX(total_games) as MaxTotalGames from qustoms.summoner ) a'+
'WHERE total_games > a.MaxTotalGames/5 ) b ) c'+
'WHERE total_games > c.MaxTotalGames/5'+
'UNION ALL'+
'################################ Champ Pool Score ################################'+
'SELECT ChampScore as Score, f.summoner_id from qustoms.summoner_match g'+
'INNER JOIN ('+
'SELECT (count(distinct champion_id))/e.LargestChampPool * 10 as ChampScore, count(summoner_id) as TotalGames, summoner_id, e.MaxTotalGames2 as MaxTotalGames2 FROM qustoms.summoner_match'+
'INNER JOIN ('+
'SELECT MAX(d.MaxChampPool) as LargestChampPool, d.MaxTotalGames2 as MaxTotalGames2 from qustoms.summoner_match'+
'INNER JOIN ('+
'SELECT MAX(c.ChampPoolSize) as MaxChampPool, c.MaxTotalGames as MaxTotalGames2, c.EnoughGamesID as EnoughGamesID2 from qustoms.summoner_match'+
'INNER JOIN ('+
'SELECT b.EnoughGamesID as EnoughGamesID, b.MaxTotalGames as MaxTotalGames, count( distinct champion_id) as ChampPoolSize  from qustoms.summoner_match'+
'INNER JOIN('+
'SELECT id as EnoughGamesID, MaxTotalGames from qustoms.summoner'+
'INNER JOIN('+
'SELECT MAX(total_games) as MaxTotalGames from qustoms.summoner )a'+
'WHERE total_games > a.MaxTotalGames/5) b'+
'WHERE b.EnoughGamesID = summoner_id'+
'GROUP BY summoner_id ) c '+
'GROUP BY EnoughGamesID ) d ) e'+
'GROUP BY summoner_id ) f'+
'WHERE f.TotalGames > f.MaxTotalGames2/5 '+
'GROUP BY summoner_id'+
'UNION ALL'+
'################################ Total Diversity Score ################################'+
'SELECT e.RoleDiversityScore as Score, e.idnew as id from qustoms.summoner'+
'INNER JOIN ('+
'SELECT d.summoner_name as summoner_name, d.RoleDiverSityScore as RoleDiversityScore, d.total_games as total_games, d.MaxTotalGames as MaxTotalGames, d.id as idnew from qustoms.summoner e'+
'INNER JOIN('+
'SELECT summoner_name, total_games, c.MaxTotalGames as MaxTotalGames, (c.MaxRoleDiversity+c.MinRoleDiversity)/(c.MaxRoleDiversity+STDDEV(t))*10 as RoleDiversityScore, id'+
'FROM'+
'('+
  'SELECT top_games AS t, summoner_name, id, total_games FROM qustoms.summoner'+
  'UNION ALL'+
  'SELECT jgl_games AS t, summoner_name, id, total_games  FROM qustoms.summoner'+
  'UNION ALL'+
  'SELECT mid_games AS t, summoner_name, id, total_games  FROM qustoms.summoner'+
  'UNION ALL'+
  'SELECT adc_games AS t, summoner_name, id, total_games  FROM qustoms.summoner'+
  'UNION ALL'+
  'SELECT sup_games AS t, summoner_name, id, total_games  FROM qustoms.summoner'+
')'+
  'AS data'+
'INNER JOIN('+
'SELECT MIN(RoleDiversity) as MinRoleDiversity, MAX(RoleDiversity) as MaxRoleDiversity, b.MaxTotalGames as MaxTotalGames FROM qustoms.summoner'+
'INNER JOIN ('+
'SELECT summoner_name, total_games,'+
  'STDDEV(t) as RoleDiversity, a.MaxTotalGames as MaxTotalGames'+
'FROM'+
'('+
  'SELECT top_games AS t, summoner_name, total_games FROM qustoms.summoner'+
  'UNION ALL'+
  'SELECT jgl_games AS t, summoner_name, total_games  FROM qustoms.summoner'+
  'UNION ALL'+
  'SELECT mid_games AS t, summoner_name, total_games  FROM qustoms.summoner'+
  'UNION ALL'+
  'SELECT adc_games AS t, summoner_name, total_games  FROM qustoms.summoner'+
  'UNION ALL'+
  'SELECT sup_games AS t, summoner_name, total_games  FROM qustoms.summoner'+
')'+
  'AS data'+
'INNER JOIN('+
'SELECT MAX(total_games) as MaxTotalGames from qustoms.summoner) a'+
'WHERE total_games > a.MaxTotalGames/5'+
'GROUP BY summoner_name ) b )c'+
'GROUP BY summoner_name ) d'+
'GROUP BY d.summoner_name ) e'+
'WHERE e.total_games > e.MaxTotalGames/5'+
'GROUP BY e.summoner_name'+
'################################ Win Rate Score ################################'+
'UNION ALL'+
'SELECT (total_wins/total_games)/c.MaxWinrate * 10 as Score, id FROM qustoms.summoner d'+
'INNER JOIN('+
'SELECT MAX(a.winrate) as MaxWinrate, a.MaxTotalGames FROM qustoms.summoner'+
'INNER JOIN ('+
'SELECT total_games, total_wins/total_games as winrate, b.MaxTotalGames as MaxTotalGames'+
'FROM qustoms.summoner '+
'INNER JOIN ('+
'SELECT (MAX(total_games)/5) as MaxTotalGames '+
'FROM qustoms.summoner) b'+
'ON total_games > b.MaxTotalGames ) a ) c'+
'WHERE total_games > c.MaxTotalGames'+
'################################ Total Games Score ################################'+
'UNION ALL'+
'SELECT total_games/a.MaxTotalGames *10 as Score, id from qustoms.summoner b'+
'INNER JOIN('+
'SELECT MAX(total_games) as MaxTotalGames from qustoms.summoner) a'+
'WHERE total_games > a.MaxTotalGames/5'+
')'+
'AS data'+
'GROUP BY id ) j'+
'ON j.id = t.id;'

----------------------------------------------------------- UPDATE SUMMONER ------------------------------------------------------------

'UPDATE qustoms.summoner z'+
'INNER JOIN('+
'SELECT j.id as id, summoner_name, j.PlayerRankScore as PlayerRankScore from qustoms.summoner t'+
'INNER JOIN('+
'SELECT id, SUM(Score) PlayerRankScore'+
'FROM'+
'('+
'################################ KDA Score ################################'+
'SELECT ((total_kills+total_assists)/total_deaths)/MaxKDA * 100 as Score, id from qustoms.summoner d'+
'INNER JOIN ('+
'SELECT MAX(KDA) as MaxKDA, MaxTotalGames as MaxTotalGames from qustoms.summoner'+
'INNER JOIN('+
'SELECT (total_kills+total_assists)/total_deaths as KDA, MaxTotalGames as MaxTotalGames from qustoms.summoner'+
'INNER JOIN('+
'SELECT MAX(total_games) as MaxTotalGames from qustoms.summoner ) a'+
'WHERE total_games > a.MaxTotalGames/5 ) b ) c'+
'WHERE total_games > c.MaxTotalGames/5'+
'UNION ALL'+
'################################ Champ Pool Score ################################'+
'SELECT ChampScore as Score, f.summoner_id from qustoms.summoner_match g'+
'INNER JOIN ('+
'SELECT (count(distinct champion_id))/e.LargestChampPool * 100 as ChampScore, count(summoner_id) as TotalGames, summoner_id, e.MaxTotalGames2 as MaxTotalGames2 FROM qustoms.summoner_match'+
'INNER JOIN ('+
'SELECT MAX(d.MaxChampPool) as LargestChampPool, d.MaxTotalGames2 as MaxTotalGames2 from qustoms.summoner_match'+
'INNER JOIN ('+
'SELECT MAX(c.ChampPoolSize) as MaxChampPool, c.MaxTotalGames as MaxTotalGames2, c.EnoughGamesID as EnoughGamesID2 from qustoms.summoner_match'+
'INNER JOIN ('+
'SELECT b.EnoughGamesID as EnoughGamesID, b.MaxTotalGames as MaxTotalGames, count( distinct champion_id) as ChampPoolSize  from qustoms.summoner_match'+
'INNER JOIN('+
'SELECT id as EnoughGamesID, MaxTotalGames from qustoms.summoner'+
'INNER JOIN('+
'SELECT MAX(total_games) as MaxTotalGames from qustoms.summoner )a'+
'WHERE total_games > a.MaxTotalGames/5) b'+
'WHERE b.EnoughGamesID = summoner_id'+
'GROUP BY summoner_id ) c '+
'GROUP BY EnoughGamesID ) d ) e'+
'GROUP BY summoner_id ) f'+
'WHERE f.TotalGames > f.MaxTotalGames2/5 '+
'GROUP BY summoner_id'+
'UNION ALL'+
'################################ Total Diversity Score ################################'+
'SELECT e.RoleDiversityScore as Score, e.idnew as id from qustoms.summoner'+
'INNER JOIN ('+
'SELECT d.summoner_name as summoner_name, d.RoleDiverSityScore as RoleDiversityScore, d.total_games as total_games, d.MaxTotalGames as MaxTotalGames, d.id as idnew from qustoms.summoner e'+
'INNER JOIN('+
'SELECT summoner_name, total_games, c.MaxTotalGames as MaxTotalGames, (c.MaxRoleDiversity+c.MinRoleDiversity)/(c.MaxRoleDiversity+STDDEV(t))*100 as RoleDiversityScore, id'+
'FROM'+
'('+
  'SELECT top_games AS t, summoner_name, id, total_games FROM qustoms.summoner'+
  'UNION ALL'+
  'SELECT jgl_games AS t, summoner_name, id, total_games  FROM qustoms.summoner'+
  'UNION ALL'+
  'SELECT mid_games AS t, summoner_name, id, total_games  FROM qustoms.summoner'+
  'UNION ALL'+
  'SELECT adc_games AS t, summoner_name, id, total_games  FROM qustoms.summoner'+
  'UNION ALL'+
  'SELECT sup_games AS t, summoner_name, id, total_games  FROM qustoms.summoner'+
')'+
  'AS data'+
'INNER JOIN('+
'SELECT MIN(RoleDiversity) as MinRoleDiversity, MAX(RoleDiversity) as MaxRoleDiversity, b.MaxTotalGames as MaxTotalGames FROM qustoms.summoner'+
'INNER JOIN ('+
'SELECT summoner_name, total_games,'+
  'STDDEV(t) as RoleDiversity, a.MaxTotalGames as MaxTotalGames'+
'FROM'+
'('+
  'SELECT top_games AS t, summoner_name, total_games FROM qustoms.summoner'+
  'UNION ALL'+
  'SELECT jgl_games AS t, summoner_name, total_games  FROM qustoms.summoner'+
  'UNION ALL'+
  'SELECT mid_games AS t, summoner_name, total_games  FROM qustoms.summoner'+
  'UNION ALL'+
  'SELECT adc_games AS t, summoner_name, total_games  FROM qustoms.summoner'+
  'UNION ALL'+
  'SELECT sup_games AS t, summoner_name, total_games  FROM qustoms.summoner'+
')'+
  'AS data'+
'INNER JOIN('+
'SELECT MAX(total_games) as MaxTotalGames from qustoms.summoner) a'+
'WHERE total_games > a.MaxTotalGames/5'+
'GROUP BY summoner_name ) b )c'+
'GROUP BY summoner_name ) d'+
'GROUP BY d.summoner_name ) e'+
'WHERE e.total_games > e.MaxTotalGames/5'+
'GROUP BY e.summoner_name'+
'################################ Win Rate Score ################################'+
'UNION ALL'+
'SELECT (total_wins/total_games)/c.MaxWinrate * 100 as Score, id FROM qustoms.summoner d'+
'INNER JOIN('+
'SELECT MAX(a.winrate) as MaxWinrate, a.MaxTotalGames FROM qustoms.summoner'+
'INNER JOIN ('+
'SELECT total_games, total_wins/total_games as winrate, b.MaxTotalGames as MaxTotalGames'+
'FROM qustoms.summoner '+
'INNER JOIN ('+
'SELECT (MAX(total_games)/5) as MaxTotalGames '+
'FROM qustoms.summoner) b'+
'ON total_games > b.MaxTotalGames ) a ) c'+
'WHERE total_games > c.MaxTotalGames'+
'################################ Total Games Score ################################'+
'UNION ALL'+
'SELECT total_games/a.MaxTotalGames *100 as Score, id from qustoms.summoner b'+
'INNER JOIN('+
'SELECT MAX(total_games) as MaxTotalGames from qustoms.summoner) a'+
'WHERE total_games > a.MaxTotalGames/5'+
')'+
'AS data'+
'GROUP BY id ) j'+
'ON j.id = t.id ) t'+
'ON t.id = z.id'+
'SET z.playerrankscore = t.PlayerRankScore;'

----------------------- ADD as a trigger ---------------------------------------------

DELIMITER $$
CREATE TRIGGER UpdatePlayerScore
AFTER UPDATE
ON qustoms.recording FOR EACH ROW
BEGIN
  UPDATE qustoms.summoner z
  INNER JOIN(
  SELECT j.id as id, summoner_name, j.PlayerRankScore as PlayerRankScore from qustoms.summoner t
  INNER JOIN(
  SELECT id, SUM(Score) PlayerRankScore
  FROM
  (
  ################################ KDA Score ################################
  SELECT ((total_kills+total_assists)/total_deaths)/MaxKDA * 100 as Score, id from qustoms.summoner d
  INNER JOIN (
  SELECT MAX(KDA) as MaxKDA, MaxTotalGames as MaxTotalGames from qustoms.summoner
  INNER JOIN(
  SELECT (total_kills+total_assists)/total_deaths as KDA, MaxTotalGames as MaxTotalGames from qustoms.summoner
  INNER JOIN(
  SELECT MAX(total_games) as MaxTotalGames from qustoms.summoner ) a
  WHERE total_games > a.MaxTotalGames/5 ) b ) c
  WHERE total_games > c.MaxTotalGames/5
  UNION ALL
  ################################ Champ Pool Score ################################
  SELECT ChampScore as Score, f.summoner_id from qustoms.summoner_match g
  INNER JOIN (
  SELECT (count(distinct champion_id))/e.LargestChampPool * 100 as ChampScore, count(summoner_id) as TotalGames, summoner_id, e.MaxTotalGames2 as MaxTotalGames2 FROM qustoms.summoner_match
  INNER JOIN (
  SELECT MAX(d.MaxChampPool) as LargestChampPool, d.MaxTotalGames2 as MaxTotalGames2 from qustoms.summoner_match
  INNER JOIN (
  SELECT MAX(c.ChampPoolSize) as MaxChampPool, c.MaxTotalGames as MaxTotalGames2, c.EnoughGamesID as EnoughGamesID2 from qustoms.summoner_match
  INNER JOIN (
  SELECT b.EnoughGamesID as EnoughGamesID, b.MaxTotalGames as MaxTotalGames, count( distinct champion_id) as ChampPoolSize  from qustoms.summoner_match
  INNER JOIN(
  SELECT id as EnoughGamesID, MaxTotalGames from qustoms.summoner
  INNER JOIN(
  SELECT MAX(total_games) as MaxTotalGames from qustoms.summoner )a
  WHERE total_games > a.MaxTotalGames/5) b
  WHERE b.EnoughGamesID = summoner_id
  GROUP BY summoner_id ) c 
  GROUP BY EnoughGamesID ) d ) e
  GROUP BY summoner_id ) f
  WHERE f.TotalGames > f.MaxTotalGames2/5 
  GROUP BY summoner_id
  UNION ALL
  ################################ Total Diversity Score ################################
  SELECT e.RoleDiversityScore as Score, e.idnew as id from qustoms.summoner
  INNER JOIN (
  SELECT d.summoner_name as summoner_name, d.RoleDiverSityScore as RoleDiversityScore, d.total_games as total_games, d.MaxTotalGames as MaxTotalGames, d.id as idnew from qustoms.summoner e
  INNER JOIN(
  SELECT summoner_name, total_games, c.MaxTotalGames as MaxTotalGames, (c.MaxRoleDiversity+c.MinRoleDiversity)/(c.MaxRoleDiversity+STDDEV(t))*100 as RoleDiversityScore, id
  FROM
  (
    SELECT top_games AS t, summoner_name, id, total_games FROM qustoms.summoner
    UNION ALL
    SELECT jgl_games AS t, summoner_name, id, total_games  FROM qustoms.summoner
    UNION ALL
    SELECT mid_games AS t, summoner_name, id, total_games  FROM qustoms.summoner
    UNION ALL
    SELECT adc_games AS t, summoner_name, id, total_games  FROM qustoms.summoner
    UNION ALL
    SELECT sup_games AS t, summoner_name, id, total_games  FROM qustoms.summoner
  )
    AS data
  INNER JOIN(
  SELECT MIN(RoleDiversity) as MinRoleDiversity, MAX(RoleDiversity) as MaxRoleDiversity, b.MaxTotalGames as MaxTotalGames FROM qustoms.summoner
  INNER JOIN (
  SELECT summoner_name, total_games,
    STDDEV(t) as RoleDiversity, a.MaxTotalGames as MaxTotalGames
  FROM
  (
    SELECT top_games AS t, summoner_name, total_games FROM qustoms.summoner
    UNION ALL
    SELECT jgl_games AS t, summoner_name, total_games  FROM qustoms.summoner
    UNION ALL
    SELECT mid_games AS t, summoner_name, total_games  FROM qustoms.summoner
    UNION ALL
    SELECT adc_games AS t, summoner_name, total_games  FROM qustoms.summoner
    UNION ALL
    SELECT sup_games AS t, summoner_name, total_games  FROM qustoms.summoner
  )
    AS data
  INNER JOIN(
  SELECT MAX(total_games) as MaxTotalGames from qustoms.summoner) a
  WHERE total_games > a.MaxTotalGames/5
  GROUP BY summoner_name ) b )c
  GROUP BY summoner_name ) d
  GROUP BY d.summoner_name ) e
  WHERE e.total_games > e.MaxTotalGames/5
  GROUP BY e.summoner_name
  ################################ Win Rate Score ################################
  UNION ALL
  SELECT (total_wins/total_games)/c.MaxWinrate * 100 as Score, id FROM qustoms.summoner d
  INNER JOIN(
  SELECT MAX(a.winrate) as MaxWinrate, a.MaxTotalGames FROM qustoms.summoner
  INNER JOIN (
  SELECT total_games, total_wins/total_games as winrate, b.MaxTotalGames as MaxTotalGames
  FROM qustoms.summoner 
  INNER JOIN (
  SELECT (MAX(total_games)/5) as MaxTotalGames 
  FROM qustoms.summoner) b
  ON total_games > b.MaxTotalGames ) a ) c
  WHERE total_games > c.MaxTotalGames
  ################################ Total Games Score ################################
  UNION ALL
  SELECT total_games/a.MaxTotalGames *100 as Score, id from qustoms.summoner b
  INNER JOIN(
  SELECT MAX(total_games) as MaxTotalGames from qustoms.summoner) a
  WHERE total_games > a.MaxTotalGames/5
  )
  AS data
  GROUP BY id ) j
  ON j.id = t.id ) t
  ON t.id = z.id
  SET z.rankdelta = z.playerrankscore - t.playerrankscore  
  SET z.playerrankscore = t.PlayerRankScore;
END$$
DELIMITER ;

---------------------------------------------------------------------

'DELIMITER $$ '+
'CREATE TRIGGER UpdatePlayerScore '+
'AFTER UPDATE '+
'ON qustoms.recording FOR EACH ROW '+
'BEGIN '+
  'UPDATE qustoms.summoner z '+
  'INNER JOIN( '+
  'SELECT j.id as id, summoner_name, j.PlayerRankScore as PlayerRankScore from qustoms.summoner t '+
  'INNER JOIN( '+
  'SELECT id, SUM(Score) PlayerRankScore '+
  'FROM '+
  '( '+
  '################################ KDA Score ################################ '+
  'SELECT ((total_kills+total_assists)/total_deaths)/MaxKDA * 100 as Score, id from qustoms.summoner d '+
  'INNER JOIN ( '+
  'SELECT MAX(KDA) as MaxKDA, MaxTotalGames as MaxTotalGames from qustoms.summoner '+
  'INNER JOIN( '+
  'SELECT (total_kills+total_assists)/total_deaths as KDA, MaxTotalGames as MaxTotalGames from qustoms.summoner '+
  'INNER JOIN( '+
  'SELECT MAX(total_games) as MaxTotalGames from qustoms.summoner ) a '+
  'WHERE total_games > a.MaxTotalGames/5 ) b ) c '+
  'WHERE total_games > c.MaxTotalGames/5 '+
  'UNION ALL '+
  '################################ Champ Pool Score ################################ '+
  'SELECT ChampScore as Score, f.summoner_id from qustoms.summoner_match g '+
  'INNER JOIN ( '+
  'SELECT (count(distinct champion_id))/e.LargestChampPool * 100 as ChampScore, count(summoner_id) as TotalGames, summoner_id, e.MaxTotalGames2 as MaxTotalGames2 FROM qustoms.summoner_match '+
  'INNER JOIN ( '+
  'SELECT MAX(d.MaxChampPool) as LargestChampPool, d.MaxTotalGames2 as MaxTotalGames2 from qustoms.summoner_match '+
  'INNER JOIN ( '+
  'SELECT MAX(c.ChampPoolSize) as MaxChampPool, c.MaxTotalGames as MaxTotalGames2, c.EnoughGamesID as EnoughGamesID2 from qustoms.summoner_match '+
  'INNER JOIN ( '+
  'SELECT b.EnoughGamesID as EnoughGamesID, b.MaxTotalGames as MaxTotalGames, count( distinct champion_id) as ChampPoolSize  from qustoms.summoner_match '+
  'INNER JOIN( '+
  'SELECT id as EnoughGamesID, MaxTotalGames from qustoms.summoner '+
  'INNER JOIN( '+
  'SELECT MAX(total_games) as MaxTotalGames from qustoms.summoner )a '+
  'WHERE total_games > a.MaxTotalGames/5) b '+
  'WHERE b.EnoughGamesID = summoner_id '+
  'GROUP BY summoner_id ) c  '+
  'GROUP BY EnoughGamesID ) d ) e '+
  'GROUP BY summoner_id ) f '+
  'WHERE f.TotalGames > f.MaxTotalGames2/5  '+
  'GROUP BY summoner_id '+
  'UNION ALL '+
  '################################ Total Diversity Score ################################ '+
  'SELECT e.RoleDiversityScore as Score, e.idnew as id from qustoms.summoner '+
  'INNER JOIN ( '+
  'SELECT d.summoner_name as summoner_name, d.RoleDiverSityScore as RoleDiversityScore, d.total_games as total_games, d.MaxTotalGames as MaxTotalGames, d.id as idnew from qustoms.summoner e '+
  'INNER JOIN( '+
  'SELECT summoner_name, total_games, c.MaxTotalGames as MaxTotalGames, (c.MaxRoleDiversity+c.MinRoleDiversity)/(c.MaxRoleDiversity+STDDEV(t))*100 as RoleDiversityScore, id '+
  'FROM '+
  '( '+
    'SELECT top_games AS t, summoner_name, id, total_games FROM qustoms.summoner '+
    'UNION ALL '+
    'SELECT jgl_games AS t, summoner_name, id, total_games  FROM qustoms.summoner '+
    'UNION ALL '+
    'SELECT mid_games AS t, summoner_name, id, total_games  FROM qustoms.summoner '+
    'UNION ALL '+
    'SELECT adc_games AS t, summoner_name, id, total_games  FROM qustoms.summoner '+
    'UNION ALL '+
    'SELECT sup_games AS t, summoner_name, id, total_games  FROM qustoms.summoner '+
  ') '+
    'AS data '+
  'INNER JOIN( '+
  'SELECT MIN(RoleDiversity) as MinRoleDiversity, MAX(RoleDiversity) as MaxRoleDiversity, b.MaxTotalGames as MaxTotalGames FROM qustoms.summoner '+
  'INNER JOIN ( '+
  'SELECT summoner_name, total_games, '+
    'STDDEV(t) as RoleDiversity, a.MaxTotalGames as MaxTotalGames '+
  'FROM '+
  '( '+
    'SELECT top_games AS t, summoner_name, total_games FROM qustoms.summoner '+
    'UNION ALL '+
    'SELECT jgl_games AS t, summoner_name, total_games  FROM qustoms.summoner '+
    'UNION ALL '+
    'SELECT mid_games AS t, summoner_name, total_games  FROM qustoms.summoner '+
    'UNION ALL '+
    'SELECT adc_games AS t, summoner_name, total_games  FROM qustoms.summoner '+
    'UNION ALL '+
    'SELECT sup_games AS t, summoner_name, total_games  FROM qustoms.summoner '+
  ') '+
    'AS data '+
  'INNER JOIN( '+
  'SELECT MAX(total_games) as MaxTotalGames from qustoms.summoner) a '+
  'WHERE total_games > a.MaxTotalGames/5 '+
  'GROUP BY summoner_name ) b )c '+
  'GROUP BY summoner_name ) d '+
  'GROUP BY d.summoner_name ) e '+
  'WHERE e.total_games > e.MaxTotalGames/5 '+
  'GROUP BY e.summoner_name '+
  '################################ Win Rate Score ################################ '+
  'UNION ALL '+
  'SELECT (total_wins/total_games)/c.MaxWinrate * 100 as Score, id FROM qustoms.summoner d '+
  'INNER JOIN( '+
  'SELECT MAX(a.winrate) as MaxWinrate, a.MaxTotalGames FROM qustoms.summoner '+
  'INNER JOIN ( '+
  'SELECT total_games, total_wins/total_games as winrate, b.MaxTotalGames as MaxTotalGames '+
  'FROM qustoms.summoner  '+
  'INNER JOIN ( '+
  'SELECT (MAX(total_games)/5) as MaxTotalGames  '+
  'FROM qustoms.summoner) b '+
  'ON total_games > b.MaxTotalGames ) a ) c '+
  'WHERE total_games > c.MaxTotalGames '+
  '################################ Total Games Score ################################ '+
  'UNION ALL '+
  'SELECT total_games/a.MaxTotalGames *100 as Score, id from qustoms.summoner b '+
  'INNER JOIN( '+
  'SELECT MAX(total_games) as MaxTotalGames from qustoms.summoner) a '+
  'WHERE total_games > a.MaxTotalGames/5 '+
  ') '+
  'AS data '+
  'GROUP BY id ) j '+
  'ON j.id = t.id ) t '+
  'ON t.id = z.id '+
  'SET z.rankdelta = z.playerrankscore - t.playerrankscore  AND z.playerrankscore = t.PlayerRankScore; '+
'END$$ '+
'DELIMITER ; '

------------------- ALOT of Triggers -----------------------

'CREATE TRIGGER UpdatePlayerScore '+
'AFTER UPDATE '+
'ON qustoms.recording FOR EACH ROW '+
'BEGIN '+
  'UPDATE qustoms.summoner z '+
  'INNER JOIN( '+
  'SELECT j.id as id, summoner_name, j.PlayerRankScore as PlayerRankScore from qustoms.summoner t '+
  'INNER JOIN( '+
  'SELECT id, SUM(Score) PlayerRankScore '+
  'FROM '+
  '( '+
  '################################ KDA Score ################################ '+
  'SELECT ((total_kills+total_assists)/total_deaths)/MaxKDA * 100 as Score, id from qustoms.summoner d '+
  'INNER JOIN ( '+
  'SELECT MAX(KDA) as MaxKDA, MaxTotalGames as MaxTotalGames from qustoms.summoner '+
  'INNER JOIN( '+
  'SELECT (total_kills+total_assists)/total_deaths as KDA, MaxTotalGames as MaxTotalGames from qustoms.summoner '+
  'INNER JOIN( '+
  'SELECT MAX(total_games) as MaxTotalGames from qustoms.summoner ) a '+
  'WHERE total_games > a.MaxTotalGames/5 ) b ) c '+
  'WHERE total_games > c.MaxTotalGames/5 '+
  'UNION ALL '+
  '################################ Champ Pool Score ################################ '+
  'SELECT ChampScore as Score, f.summoner_id from qustoms.summoner_match g '+
  'INNER JOIN ( '+
  'SELECT (count(distinct champion_id))/e.LargestChampPool * 100 as ChampScore, count(summoner_id) as TotalGames, summoner_id, e.MaxTotalGames2 as MaxTotalGames2 FROM qustoms.summoner_match '+
  'INNER JOIN ( '+
  'SELECT MAX(d.MaxChampPool) as LargestChampPool, d.MaxTotalGames2 as MaxTotalGames2 from qustoms.summoner_match '+
  'INNER JOIN ( '+
  'SELECT MAX(c.ChampPoolSize) as MaxChampPool, c.MaxTotalGames as MaxTotalGames2, c.EnoughGamesID as EnoughGamesID2 from qustoms.summoner_match '+
  'INNER JOIN ( '+
  'SELECT b.EnoughGamesID as EnoughGamesID, b.MaxTotalGames as MaxTotalGames, count( distinct champion_id) as ChampPoolSize  from qustoms.summoner_match '+
  'INNER JOIN( '+
  'SELECT id as EnoughGamesID, MaxTotalGames from qustoms.summoner '+
  'INNER JOIN( '+
  'SELECT MAX(total_games) as MaxTotalGames from qustoms.summoner )a '+
  'WHERE total_games > a.MaxTotalGames/5) b '+
  'WHERE b.EnoughGamesID = summoner_id '+
  'GROUP BY summoner_id ) c  '+
  'GROUP BY EnoughGamesID ) d ) e '+
  'GROUP BY summoner_id ) f '+
  'WHERE f.TotalGames > f.MaxTotalGames2/5  '+
  'GROUP BY summoner_id '+
  'UNION ALL '+
  '################################ Total Diversity Score ################################ '+
  'SELECT e.RoleDiversityScore as Score, e.idnew as id from qustoms.summoner '+
  'INNER JOIN ( '+
  'SELECT d.summoner_name as summoner_name, d.RoleDiverSityScore as RoleDiversityScore, d.total_games as total_games, d.MaxTotalGames as MaxTotalGames, d.id as idnew from qustoms.summoner e '+
  'INNER JOIN( '+
  'SELECT summoner_name, total_games, c.MaxTotalGames as MaxTotalGames, (c.MaxRoleDiversity+c.MinRoleDiversity)/(c.MaxRoleDiversity+STDDEV(t))*100 as RoleDiversityScore, id '+
  'FROM '+
  '( '+
    'SELECT top_games AS t, summoner_name, id, total_games FROM qustoms.summoner '+
    'UNION ALL '+
    'SELECT jgl_games AS t, summoner_name, id, total_games  FROM qustoms.summoner '+
    'UNION ALL '+
    'SELECT mid_games AS t, summoner_name, id, total_games  FROM qustoms.summoner '+
    'UNION ALL '+
    'SELECT adc_games AS t, summoner_name, id, total_games  FROM qustoms.summoner '+
    'UNION ALL '+
    'SELECT sup_games AS t, summoner_name, id, total_games  FROM qustoms.summoner '+
  ') '+
    'AS data '+
  'INNER JOIN( '+
  'SELECT MIN(RoleDiversity) as MinRoleDiversity, MAX(RoleDiversity) as MaxRoleDiversity, b.MaxTotalGames as MaxTotalGames FROM qustoms.summoner '+
  'INNER JOIN ( '+
  'SELECT summoner_name, total_games, '+
    'STDDEV(t) as RoleDiversity, a.MaxTotalGames as MaxTotalGames '+
  'FROM '+
  '( '+
    'SELECT top_games AS t, summoner_name, total_games FROM qustoms.summoner '+
    'UNION ALL '+
    'SELECT jgl_games AS t, summoner_name, total_games  FROM qustoms.summoner '+
    'UNION ALL '+
    'SELECT mid_games AS t, summoner_name, total_games  FROM qustoms.summoner '+
    'UNION ALL '+
    'SELECT adc_games AS t, summoner_name, total_games  FROM qustoms.summoner '+
    'UNION ALL '+
    'SELECT sup_games AS t, summoner_name, total_games  FROM qustoms.summoner '+
  ') '+
    'AS data '+
  'INNER JOIN( '+
  'SELECT MAX(total_games) as MaxTotalGames from qustoms.summoner) a '+
  'WHERE total_games > a.MaxTotalGames/5 '+
  'GROUP BY summoner_name ) b )c '+
  'GROUP BY summoner_name ) d '+
  'GROUP BY d.summoner_name ) e '+
  'WHERE e.total_games > e.MaxTotalGames/5 '+
  'GROUP BY e.summoner_name '+
  '################################ Win Rate Score ################################ '+
  'UNION ALL '+
  'SELECT (total_wins/total_games)/c.MaxWinrate * 100 as Score, id FROM qustoms.summoner d '+
  'INNER JOIN( '+
  'SELECT MAX(a.winrate) as MaxWinrate, a.MaxTotalGames FROM qustoms.summoner '+
  'INNER JOIN ( '+
  'SELECT total_games, total_wins/total_games as winrate, b.MaxTotalGames as MaxTotalGames '+
  'FROM qustoms.summoner  '+
  'INNER JOIN ( '+
  'SELECT (MAX(total_games)/5) as MaxTotalGames  '+
  'FROM qustoms.summoner) b '+
  'ON total_games > b.MaxTotalGames ) a ) c '+
  'WHERE total_games > c.MaxTotalGames '+
  '################################ Total Games Score ################################ '+
  'UNION ALL '+
  'SELECT total_games/a.MaxTotalGames *100 as Score, id from qustoms.summoner b '+
  'INNER JOIN( '+
  'SELECT MAX(total_games) as MaxTotalGames from qustoms.summoner) a '+
  'WHERE total_games > a.MaxTotalGames/5 '+
  ') '+
  'AS data '+
  'GROUP BY id ) j '+
  'ON j.id = t.id ) t '+
  'ON t.id = z.id '+
  'SET z.rankdelta = z.playerrankscore - t.playerrankscore  AND z.playerrankscore = t.PlayerRankScore; '+
'END ; '

-------------------NO QUOTES --------------------

CREATE TRIGGER UpdateSummonerTotals
    AFTER UPDATE
    ON qustoms.summoner_match FOR EACH ROW 
    BEGIN
        IF NEW.win = 1 THEN
            UPDATE qustoms.summoner SET
                total_wins = total_wins + 1,
                total_kills = total_kills + NEW.kills,
                total_assists = total_assists + NEW.assists,
                total_deaths = total_deaths + NEW.deaths,
                total_games = total_games + 1
                WHERE id = NEW.summoner_id;
        ELSE 
            UPDATE qustoms.summoner SET
                total_kills = total_kills + NEW.kills,
                total_assists = total_assists + NEW.assists,
                total_deaths = total_deaths + NEW.deaths,
                total_games = total_games + 1
                WHERE id = NEW.summoner_id;
        END IF;
        IF NEW.position = "TOP" AND NEW.win = 1 THEN
            UPDATE qustoms.summoner SET
                top_wins = top_wins + 1,
                top_games = top_games + 1,
                top_kills = top_kills + NEW.kills,
                top_deaths = top_deaths + NEW.deaths,
                top_assists = top_assists + NEW.assists
                WHERE id = NEW.summoner_id;
        ELSEIF NEW.position = "TOP" THEN
            UPDATE qustoms.summoner SET
                top_games = top_games + 1,
                top_kills = top_kills + NEW.kills,
                top_deaths = top_deaths + NEW.deaths,
                top_assists = top_assists + NEW.assists
                WHERE id = NEW.summoner_id;
        END IF;
        IF NEW.position = "JUNGLE" AND NEW.win = 1 THEN
            UPDATE qustoms.summoner SET
                jgl_wins = jgl_wins + 1,
                jgl_games = jgl_games + 1,
                jgl_kills = jgl_kills + NEW.kills,
                jgl_deaths = jgl_deaths + NEW.deaths,
                jgl_assists = jgl_assists + NEW.assists
                WHERE id = NEW.summoner_id;
        ELSEIF NEW.position = "JUNGLE" THEN
            UPDATE qustoms.summoner SET
                jgl_games = jgl_games + 1,
                jgl_kills = jgl_kills + NEW.kills,
                jgl_deaths = jgl_deaths + NEW.deaths,
                jgl_assists = jgl_assists + NEW.assists
                WHERE id = NEW.summoner_id;
        END IF;
        IF NEW.position = "MIDDLE" AND NEW.win = 1 THEN
            UPDATE qustoms.summoner SET
                mid_wins = mid_wins + 1,
                mid_games = mid_games + 1,
                mid_kills = mid_kills + NEW.kills,
                mid_deaths = mid_deaths + NEW.deaths,
                mid_assists = mid_assists + NEW.assists
                WHERE id = NEW.summoner_id;
        ELSEIF NEW.position = "MIDDLE" THEN
            UPDATE qustoms.summoner SET
                mid_games = mid_games + 1,
                mid_kills = mid_kills + NEW.kills,
                mid_deaths = mid_deaths + NEW.deaths,
                mid_assists = mid_assists + NEW.assists
                WHERE id = NEW.summoner_id;
        END IF;
        IF NEW.position = "BOTTOM" AND NEW.win = 1 THEN
            UPDATE qustoms.summoner SET
                adc_wins = adc_wins + 1,
                adc_games = adc_games + 1,
                adc_kills = adc_kills + NEW.kills,
                adc_deaths = adc_deaths + NEW.deaths,
                adc_assists = adc_assists + NEW.assists
                WHERE id = NEW.summoner_id;
        ELSEIF NEW.position = "BOTTOM" THEN
            UPDATE qustoms.summoner SET
                adc_games = adc_games + 1,
                adc_kills = adc_kills + NEW.kills,
                adc_deaths = adc_deaths + NEW.deaths,
                adc_assists = adc_assists + NEW.assists
                WHERE id = NEW.summoner_id;
        END IF;
        IF NEW.position = "SUPPORT" AND NEW.win = 1 THEN
            UPDATE qustoms.summoner SET
                sup_wins = sup_wins + 1,
                sup_games = sup_games + 1,
                sup_kills = sup_kills + NEW.kills,
                sup_deaths = sup_deaths + NEW.deaths,
                sup_assists = sup_assists + NEW.assists
                WHERE id = NEW.summoner_id;
        ELSEIF NEW.position = "SUPPORT" THEN
            UPDATE qustoms.summoner SET
                sup_games = sup_games + 1,
                sup_kills = sup_kills + NEW.kills,
                sup_deaths = sup_deaths + NEW.deaths,
                sup_assists = sup_assists + NEW.assists
                WHERE id = NEW.summoner_id;
        END IF;
    END ;

------------ With Delimiter ---------------------

DELIMITER $$
CREATE TRIGGER UpdatePlayerScore
AFTER UPDATE
ON qustoms.recording FOR EACH ROW
BEGIN
  UPDATE qustoms.summoner z
  INNER JOIN(
  SELECT j.id as id, summoner_name, j.PlayerRankScore as PlayerRankScore from qustoms.summoner t
  INNER JOIN(
  SELECT id, SUM(Score) PlayerRankScore
  FROM
  (
  ################################ KDA Score ################################
  SELECT ((total_kills+total_assists)/total_deaths)/MaxKDA * 100 as Score, id from qustoms.summoner d
  INNER JOIN (
  SELECT MAX(KDA) as MaxKDA, MaxTotalGames as MaxTotalGames from qustoms.summoner
  INNER JOIN(
  SELECT (total_kills+total_assists)/total_deaths as KDA, MaxTotalGames as MaxTotalGames from qustoms.summoner
  INNER JOIN(
  SELECT MAX(total_games) as MaxTotalGames from qustoms.summoner ) a
  WHERE total_games > a.MaxTotalGames/5 ) b ) c
  WHERE total_games > c.MaxTotalGames/5
  UNION ALL
  ################################ Champ Pool Score ################################
  SELECT ChampScore as Score, f.summoner_id from qustoms.summoner_match g
  INNER JOIN (
  SELECT (count(distinct champion_id))/e.LargestChampPool * 100 as ChampScore, count(summoner_id) as TotalGames, summoner_id, e.MaxTotalGames2 as MaxTotalGames2 FROM qustoms.summoner_match
  INNER JOIN (
  SELECT MAX(d.MaxChampPool) as LargestChampPool, d.MaxTotalGames2 as MaxTotalGames2 from qustoms.summoner_match
  INNER JOIN (
  SELECT MAX(c.ChampPoolSize) as MaxChampPool, c.MaxTotalGames as MaxTotalGames2, c.EnoughGamesID as EnoughGamesID2 from qustoms.summoner_match
  INNER JOIN (
  SELECT b.EnoughGamesID as EnoughGamesID, b.MaxTotalGames as MaxTotalGames, count( distinct champion_id) as ChampPoolSize  from qustoms.summoner_match
  INNER JOIN(
  SELECT id as EnoughGamesID, MaxTotalGames from qustoms.summoner
  INNER JOIN(
  SELECT MAX(total_games) as MaxTotalGames from qustoms.summoner )a
  WHERE total_games > a.MaxTotalGames/5) b
  WHERE b.EnoughGamesID = summoner_id
  GROUP BY summoner_id ) c 
  GROUP BY EnoughGamesID ) d ) e
  GROUP BY summoner_id ) f
  WHERE f.TotalGames > f.MaxTotalGames2/5 
  GROUP BY summoner_id
  UNION ALL
  ################################ Total Diversity Score ################################
  SELECT e.RoleDiversityScore as Score, e.idnew as id from qustoms.summoner
  INNER JOIN (
  SELECT d.summoner_name as summoner_name, d.RoleDiverSityScore as RoleDiversityScore, d.total_games as total_games, d.MaxTotalGames as MaxTotalGames, d.id as idnew from qustoms.summoner e
  INNER JOIN(
  SELECT summoner_name, total_games, c.MaxTotalGames as MaxTotalGames, (c.MaxRoleDiversity+c.MinRoleDiversity)/(c.MaxRoleDiversity+STDDEV(t))*100 as RoleDiversityScore, id
  FROM
  (
    SELECT top_games AS t, summoner_name, id, total_games FROM qustoms.summoner
    UNION ALL
    SELECT jgl_games AS t, summoner_name, id, total_games  FROM qustoms.summoner
    UNION ALL
    SELECT mid_games AS t, summoner_name, id, total_games  FROM qustoms.summoner
    UNION ALL
    SELECT adc_games AS t, summoner_name, id, total_games  FROM qustoms.summoner
    UNION ALL
    SELECT sup_games AS t, summoner_name, id, total_games  FROM qustoms.summoner
  )
    AS data
  INNER JOIN(
  SELECT MIN(RoleDiversity) as MinRoleDiversity, MAX(RoleDiversity) as MaxRoleDiversity, b.MaxTotalGames as MaxTotalGames FROM qustoms.summoner
  INNER JOIN (
  SELECT summoner_name, total_games,
    STDDEV(t) as RoleDiversity, a.MaxTotalGames as MaxTotalGames
  FROM
  (
    SELECT top_games AS t, summoner_name, total_games FROM qustoms.summoner
    UNION ALL
    SELECT jgl_games AS t, summoner_name, total_games  FROM qustoms.summoner
    UNION ALL
    SELECT mid_games AS t, summoner_name, total_games  FROM qustoms.summoner
    UNION ALL
    SELECT adc_games AS t, summoner_name, total_games  FROM qustoms.summoner
    UNION ALL
    SELECT sup_games AS t, summoner_name, total_games  FROM qustoms.summoner
  )
    AS data
  INNER JOIN(
  SELECT MAX(total_games) as MaxTotalGames from qustoms.summoner) a
  WHERE total_games > a.MaxTotalGames/5
  GROUP BY summoner_name ) b )c
  GROUP BY summoner_name ) d
  GROUP BY d.summoner_name ) e
  WHERE e.total_games > e.MaxTotalGames/5
  GROUP BY e.summoner_name
  ################################ Win Rate Score ################################
  UNION ALL
  SELECT (total_wins/total_games)/c.MaxWinrate * 100 as Score, id FROM qustoms.summoner d
  INNER JOIN(
  SELECT MAX(a.winrate) as MaxWinrate, a.MaxTotalGames FROM qustoms.summoner
  INNER JOIN (
  SELECT total_games, total_wins/total_games as winrate, b.MaxTotalGames as MaxTotalGames
  FROM qustoms.summoner 
  INNER JOIN (
  SELECT (MAX(total_games)/5) as MaxTotalGames 
  FROM qustoms.summoner) b
  ON total_games > b.MaxTotalGames ) a ) c
  WHERE total_games > c.MaxTotalGames
  ################################ Total Games Score ################################
  UNION ALL
  SELECT total_games/a.MaxTotalGames *100 as Score, id from qustoms.summoner b
  INNER JOIN(
  SELECT MAX(total_games) as MaxTotalGames from qustoms.summoner) a
  WHERE total_games > a.MaxTotalGames/5
  )
  AS data
  GROUP BY id ) j
  ON j.id = t.id ) t
  ON t.id = z.id
  SET z.rankdelta = t.playerrankscore - z.playerrankscore, z.playerrankscore = t.PlayerRankScore;
END$$
DELIMITER ;